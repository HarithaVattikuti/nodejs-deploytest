name: node canary test

on:
  workflow_dispatch:

jobs:
  testoncanary:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        node-version:
          - 20-v8-canary
          - 24-v8-canary
          - 24.0.0-v8-canary
          - 20.0.0-v8-canary
          - 20.0.0-v8-canary20221101e50e45c9f8
          - 24.0.0-v8-canary2025030537242e55ac
          - 20.0.0-v8-canary2023041819be670741
          - 20-nightly
          - 18-nightly
          - 19.0.0-rc.0
          - 18.20.0
          - 17
          - 19
          - current
    steps:
      - uses: actions/checkout@v5
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Make verify-node.sh executable
        run: chmod +x __tests__/verify-node.sh
      - name: Verify node and npm
        run: |
          canaryVersion="${{ matrix.node-version }}"
          majorVersion=$(echo $canaryVersion | cut -d- -f1)
          __tests__/verify-node.sh "$majorVersion"
        shell: bash
        
  node-latest-aliases:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        node-version: [current, latest, node]
    steps:
      - name: Get node version
        run: |
          latestNodeVersion=$(curl https://nodejs.org/dist/index.json | jq -r '. [0].version')
          echo "LATEST_NODE_VERSION=$latestNodeVersion" >> $GITHUB_OUTPUT
        id: version
        shell: bash
      - uses: actions/checkout@v5
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
      - name: Retrieve version after install
        run: |
          updatedVersion=$(echo $(node --version))
          echo "NODE_VERSION_UPDATED=$updatedVersion" >> $GITHUB_OUTPUT
        id: updatedVersion
        shell: bash
      - name: Compare versions
        if: ${{ steps.version.outputs.LATEST_NODE_VERSION != steps.updatedVersion.outputs.NODE_VERSION_UPDATED}}
        run: |
          echo "Latest node version failed to download."
          exit 1
